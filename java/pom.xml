<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>compiler</groupId>
	<artifactId>java</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>java</name>
	<url>http://maven.apache.org</url>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source> <!-- Set your desired
		Java source version -->
		<maven.compiler.target>1.8</maven.compiler.target> <!-- Set your desired
		Java target version -->
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version> <!-- Updated JUnit version -->
			<scope>test</scope>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/com.github.vbmacher/java-cup-runtime -->
		<dependency>
			<groupId>com.github.vbmacher</groupId>
			<artifactId>java-cup-runtime</artifactId>
			<version>11b</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version> <!-- You can use a different version if
			needed -->
			<scope>test</scope>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.10.1</version>
			<scope>test</scope>
		</dependency>


	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.2</version> <!-- Use the appropriate version -->
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/dependency</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.2</version> <!-- Use the appropriate version -->
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/dependency</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version> 
				<executions>
					<execution>
						<id>test-backend</id>
						<phase>test</phase> 
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>

							<executable>sh</executable>
							<arguments>
								<argument>
									../scripts/mincaml-test-codegen.sh</argument>
							</arguments>
						</configuration>
					</execution>

					<execution>
						<id>test-parser</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>sh</executable>
							<arguments>
								<argument>../scripts/mincaml-test-parser.sh</argument>
							</arguments>
						</configuration>
					</execution>

					<execution>
						<id>test-frontend</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>sh</executable>
							<arguments>
								<argument>../scripts/mincaml-test-frontend.sh</argument>
							</arguments>
						</configuration>
					</execution>

					<execution>
						<id>test-typeChecking</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>sh</executable>
							<arguments>
								<argument>../scripts/mincaml-type-testing.sh</argument>
							</arguments>
						</configuration>
					</execution>

				</executions>
			</plugin>
		</plugins>

	</build>
</project>
